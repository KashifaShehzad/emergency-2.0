{"ast":null,"code":"var _jsxFileName = \"E:\\\\emergency-handling-react-node\\\\front-end\\\\src\\\\pages\\\\myServices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MyServicesData from '../Component/myServicesData';\nimport Loading from '../Component/Loading';\nimport '../Component/myServicesData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyServices = () => {\n  _s();\n\n  const [allUsers, setUsers] = useState();\n  const [currentUser, setCurrentUser] = useState();\n  const [isLoading, setIsLoading] = useState();\n  const [loggedIn, setLoggedin] = useState(false);\n  let token = localStorage.getItem(\"token\");\n\n  const getUsers = async () => {\n    setIsLoading(true);\n    console.log(\"called\");\n\n    try {\n      const response = await fetch('https://sumon-backend.herokuapp.com/api/myservices', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n\n      if (response.ok) {\n        setLoggedin(true);\n        setUsers(responseData); //console.log(allUsers)\n\n        setCurrentUser(responseData.user.user);\n      } else {\n        console.log(\"Error\");\n      }\n    } catch {\n      console.log(\"Catch\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }, this), !loggedIn && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerS\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getUsers,\n        children: \"Get my service data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), allUsers && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MyServicesData, {\n          data: allUsers,\n          user: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyServices, \"i573/Qwz3v/LdHwYLexFEkdnWdc=\");\n\n_c = MyServices;\nexport default MyServices;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyServices\");","map":{"version":3,"sources":["E:/emergency-handling-react-node/front-end/src/pages/myServices.js"],"names":["React","useState","MyServicesData","Loading","MyServices","allUsers","setUsers","currentUser","setCurrentUser","isLoading","setIsLoading","loggedIn","setLoggedin","token","localStorage","getItem","getUsers","console","log","response","fetch","method","headers","responseData","json","ok","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,iCAAP;;;AAEA,MAAMC,UAAU,GAAI,MAAM;AAAA;;AAEtB,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBL,QAAQ,EAArC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAAyBX,QAAQ,CAAC,KAAD,CAAvC;AAEA,MAAIY,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AAEA,QAAMC,QAAQ,GAAG,YAAY;AACzBN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAG;AACH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAD,EAAwD;AAChFC,QAAAA,MAAM,EAAE,KADwE;AAEhFC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiB,YAAYT;AAFxB;AAFuE,OAAxD,CAA5B;AAQA,YAAMU,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;;AACA,UAAGJ,QAAQ,CAACM,EAAZ,EAAgB;AACZb,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAN,QAAAA,QAAQ,CAACiB,YAAD,CAAR,CAFY,CAGZ;;AACAf,QAAAA,cAAc,CAACe,YAAY,CAACG,IAAb,CAAkBA,IAAnB,CAAd;AAEH,OAND,MAOK;AACDT,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AAEA,KAtBD,CAuBA,MAAM;AACFD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AACDR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAGH,GAhCD;;AAkCA,sBACI;AAAA,eAEKD,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGK,CAACE,QAAD,iBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHlB,EAIK,CAACF,SAAD,iBACD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAEO,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECX,QAAQ,iBACT;AAAA,+BACA,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAIA,QAAxB;AAAkC,UAAA,IAAI,EAAIE;AAA1C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA5DD;;GAAMH,U;;KAAAA,U;AA8DN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport MyServicesData from '../Component/myServicesData'\r\nimport Loading from '../Component/Loading'\r\nimport '../Component/myServicesData.css'\r\n\r\nconst MyServices =  () => {\r\n\r\n    const [allUsers, setUsers] = useState();\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [loggedIn, setLoggedin]= useState(false);\r\n\r\n    let token = localStorage.getItem(\"token\")\r\n\r\n    const getUsers = async () => {\r\n        setIsLoading(true);\r\n        console.log(\"called\");\r\n        try{\r\n        const response = await fetch('https://sumon-backend.herokuapp.com/api/myservices' , {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        });\r\n        \r\n        const responseData = await response.json();\r\n        console.log(responseData)\r\n        if(response.ok) {\r\n            setLoggedin(true)\r\n            setUsers(responseData)\r\n            //console.log(allUsers)\r\n            setCurrentUser(responseData.user.user)\r\n            \r\n        }\r\n        else {\r\n            console.log(\"Error\")\r\n        }\r\n          \r\n        }\r\n        catch {\r\n            console.log(\"Catch\")\r\n        }\r\n        setIsLoading(false)\r\n        \r\n        \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {isLoading && <Loading/>}\r\n            {!loggedIn && <p>Please log in to view</p>}\r\n            {!isLoading &&\r\n            <div className=\"containerS\">\r\n            <button onClick={getUsers}>Get my service data</button>\r\n            {allUsers &&\r\n            <div>\r\n            <MyServicesData data = {allUsers} user = {currentUser}/>\r\n            </div>}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyServices"]},"metadata":{},"sourceType":"module"}