{"ast":null,"code":"var _jsxFileName = \"E:\\\\emergency-handling-react-node\\\\front-end\\\\src\\\\Component\\\\adminLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport './adminLogin.css';\nimport Loading from './Loading';\nimport 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminLogin = props => {\n  _s();\n\n  const [password, setPassword] = useState();\n  const [password2, setPassword2] = useState();\n  const [isLoading, setIsLoading] = useState();\n  const [loggedIn, setLoggedIn] = useState();\n  const [userName, setUserName] = useState();\n  const [type, setType] = useState(\"police\");\n  const [msg, setMsg] = useState();\n\n  const loginHandler = async e => {\n    setIsLoading(true);\n    e.preventDefault();\n    console.log(\"called\");\n\n    try {\n      const response = await fetch('https://sumon-backend.herokuapp.com/api/admin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          type,\n          username: userName,\n          password,\n          password2\n        })\n      });\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setLoggedIn(true); //not working!!!\n\n        props.login(true, type); //console.log(\"login: \"+ loggedIn)\n      } else {\n        setMsg(\"Wrong Credentials\");\n      }\n\n      setIsLoading(false);\n      console.log(\"s: \" + responseData); //localStorage.setItem(\"adminName\", JSON.stringify(responseData.session))\n\n      localStorage.setItem(\"adminToken\", JSON.stringify(responseData.jsontoken));\n    } catch {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const handlePasswordChange2 = e => {\n    setPassword2(e.target.value);\n  };\n\n  const usernameChange = e => {\n    setUserName(e.target.value);\n  };\n\n  const serviceSet = e => {\n    setType(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }, this), !isLoading && !loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"serviceType\",\n          value: type,\n          onChange: serviceSet,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"service\",\n            children: \"Service type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"police\",\n            children: \"Police Station\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fire\",\n            children: \"Fire Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"others\",\n            children: \"Others\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"username\",\n          value: userName,\n          onChange: usernameChange,\n          type: \"email\",\n          required: true,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: password,\n          onChange: handlePasswordChange,\n          name: \"password\",\n          type: \"password\",\n          required: true,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: password2,\n          onChange: handlePasswordChange2,\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"subbtn\",\n          onClick: loginHandler,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"red center\",\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminLogin, \"eHOrskW8lhFWoC7VeNc5E9/AqdQ=\");\n\n_c = AdminLogin;\nexport default AdminLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"sources":["E:/emergency-handling-react-node/front-end/src/Component/adminLogin.js"],"names":["React","useState","Form","Loading","AdminLogin","props","password","setPassword","password2","setPassword2","isLoading","setIsLoading","loggedIn","setLoggedIn","userName","setUserName","type","setType","msg","setMsg","loginHandler","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","username","responseData","json","ok","login","localStorage","setItem","jsontoken","handlePasswordChange","target","value","handlePasswordChange2","usernameChange","serviceSet"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Form } from 'react-bootstrap';\r\nimport './adminLogin.css'\r\nimport Loading from './Loading'\r\nimport {  } from 'react-bootstrap';\r\n\r\nconst AdminLogin = (props) => {\r\n\r\n    const [password, setPassword] = useState();\r\n    const [password2, setPassword2] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [loggedIn, setLoggedIn] = useState();\r\n    const [userName, setUserName] = useState();\r\n    const [type, setType] = useState(\"police\");\r\n\r\n    const [msg, setMsg] = useState();\r\n\r\n\r\n    \r\n    const loginHandler = async e => {\r\n        setIsLoading(true)\r\n        e.preventDefault();\r\n        console.log(\"called\");\r\n        try{\r\n        const response = await fetch('https://sumon-backend.herokuapp.com/api/admin' , {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                type, username:userName, password, password2\r\n            })\r\n            \r\n        });\r\n        const responseData = await response.json();\r\n\r\n        if(response.ok) {\r\n            setLoggedIn(true) //not working!!!\r\n            props.login(true, type)\r\n            //console.log(\"login: \"+ loggedIn)\r\n            \r\n        }\r\n        else {setMsg(\"Wrong Credentials\")}\r\n        setIsLoading(false)\r\n        console.log(\"s: \"+ responseData)\r\n        //localStorage.setItem(\"adminName\", JSON.stringify(responseData.session))\r\n        localStorage.setItem(\"adminToken\", JSON.stringify(responseData.jsontoken))\r\n        \r\n    }\r\n    catch {\r\n        setIsLoading(false)\r\n    }\r\n    \r\n}\r\n\r\n    \r\n\r\n    const handlePasswordChange = e => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const handlePasswordChange2 = e => {\r\n        setPassword2(e.target.value);\r\n    }\r\n    const usernameChange =  e => {\r\n        setUserName(e.target.value);\r\n    }\r\n\r\n    const serviceSet = e => {\r\n        setType(e.target.value);\r\n    }\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {isLoading && <Loading/>}\r\n\r\n            {!isLoading && !loggedIn && \r\n            \r\n        <div className=\"App\">\r\n        <div className=\"\">\r\n            <select name=\"serviceType\" value={type} onChange={serviceSet}>\r\n                <option value=\"service\">Service type</option>\r\n                <option value=\"police\">Police Station</option>\r\n                <option value=\"fire\">Fire Service</option>\r\n                <option value=\"others\">Others</option>\r\n            </select>\r\n            <Form.Control name=\"username\" value={userName} onChange={usernameChange} type=\"email\" required placeholder=\"Username\"></Form.Control>\r\n            <Form.Control value={password} onChange={handlePasswordChange} name=\"password\" type=\"password\" required placeholder=\"Password\"></Form.Control>\r\n            <Form.Control value={password2} onChange={handlePasswordChange2} name=\"password\" type=\"password\" placeholder=\"Password2\"></Form.Control>\r\n            <button className=\"subbtn\"onClick={loginHandler} type=\"submit\">Submit</button>\r\n            <br></br> <br></br> <br></br>\r\n            <p className=\"red center\">{msg}</p>\r\n      </div>\r\n    </div>\r\n    \r\n            }\r\n            \r\n    \r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default AdminLogin\r\n"]},"metadata":{},"sourceType":"module"}