{"ast":null,"code":"var _jsxFileName = \"E:\\\\emergency-handling-react-node\\\\front-end\\\\src\\\\Component\\\\getServiceData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './getServiceData.css';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetServiceData = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState();\n  const [msg, setMsg] = useState();\n  const data = props.data;\n  const type = props.type;\n  const token = localStorage.getItem(\"token\");\n  const [createdServiceId, setCreatedServiceId] = useState();\n\n  const createService = async serviceId => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('https://sumon-backend.herokuapp.com/api/service', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          type,\n          serviceId\n        })\n      });\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setCreatedServiceId(responseData.data);\n        setMsg(\"Please Don't Panik, We're on the way\");\n      } else if (response.status === 405) {\n        setMsg(\"Required Data Error\");\n      } else if (response.status === 500) {\n        setMsg(\"Database Error\");\n      } else {\n        setMsg(\"Something Bad, Contact Developers\");\n      }\n\n      setIsLoading(false);\n    } catch {\n      setIsLoading(false);\n    }\n  };\n\n  const Users = data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"class\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"center\",\n      onClick: () => createService(data.id),\n      children: \"Click to Get HELP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID: \", data.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Full address: \", data.address, \", \", data.thana, \", \", data.district]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", data.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Phone: \", data.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Added By: \", data.addedBy]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, data.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", msg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), !isLoading && createdServiceId && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        children: [\"Service Creation ID: \", createdServiceId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GetServiceData, \"P3BQvVIHDGwmkrFlxiwYGgcmWS4=\");\n\n_c = GetServiceData;\nexport default GetServiceData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetServiceData\");","map":{"version":3,"sources":["E:/emergency-handling-react-node/front-end/src/Component/getServiceData.js"],"names":["React","useState","Loading","GetServiceData","props","isLoading","setIsLoading","msg","setMsg","data","type","token","localStorage","getItem","createdServiceId","setCreatedServiceId","createService","serviceId","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","status","Users","map","id","address","thana","district","email","phone","addedBy"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport './getServiceData.css'\r\nimport Loading from './Loading'\r\n\r\nconst GetServiceData = (props) =>{\r\n\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [msg, setMsg] = useState();\r\n    const data = props.data\r\n    const type= props.type\r\n    const token = localStorage.getItem(\"token\")\r\n    const [createdServiceId, setCreatedServiceId] = useState();\r\n\r\n    const createService = async (serviceId) => {\r\n        setIsLoading(true)\r\n\r\n        try{\r\n        const response = await fetch('https://sumon-backend.herokuapp.com/api/service' , {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({\r\n                type, serviceId\r\n            })\r\n            \r\n        });\r\n        const responseData = await response.json();\r\n        if(response.ok) {\r\n            setCreatedServiceId(responseData.data);\r\n            setMsg(\"Please Don't Panik, We're on the way\")\r\n        }\r\n        else if (response.status===405) {setMsg(\"Required Data Error\")}\r\n        else if (response.status===500) {setMsg(\"Database Error\")}\r\n        else {setMsg(\"Something Bad, Contact Developers\");}\r\n        setIsLoading(false)\r\n        \r\n    }\r\n    catch {\r\n        setIsLoading(false)\r\n    }\r\n    }\r\n\r\n    \r\n    const Users = data.map((data) =>\r\n\r\n    <div className=\"class\" key={data.id}>\r\n        <button className=\"center\" onClick={()=>createService(data.id)}>Click to Get HELP</button>\r\n        <p>ID: {data.id}</p>\r\n        <p>Full address: {data.address}, {data.thana}, {data.district}</p>\r\n        <p>Email: {data.email}</p> \r\n        <p>Phone: {data.phone}</p>\r\n        <p>Added By: {data.addedBy}</p>\r\n    </div>\r\n    \r\n    );\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n\r\n        {isLoading && <Loading/>}\r\n        \r\n        {!isLoading &&\r\n        <div>\r\n            <p> {msg}</p>\r\n            {!isLoading && createdServiceId && <p className=\"center\">Service Creation ID: {createdServiceId}</p>}\r\n            <div>{Users}</div>\r\n        </div>}\r\n        </React.Fragment>\r\n        \r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default GetServiceData"]},"metadata":{},"sourceType":"module"}