{"ast":null,"code":"var _jsxFileName = \"E:\\\\emergency-handling-react-node\\\\front-end\\\\src\\\\pages\\\\DemoLogin.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './DemoLogin.css';\nimport Services from './services';\nimport Loading from '../Component/Loading'; //import Login from '../Component/Sdata/Login'\n\nimport { facebookProvider, googleProvider } from '../config/authMethods';\nimport socialMediaAuth from '../config/auth';\nimport { Form, Row, Col, FloatingLabel } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DemoLogin = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [district, setDistrict] = useState();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [signUpMode, setSignUpMode] = useState(false);\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [msg, setMsg] = useState();\n  const [isLoading, setIsLoading] = useState();\n  const [phone, setPhone] = useState();\n  const [data, setData] = useState();\n  const [img, setImg] = useState();\n  const [type, setType] = useState();\n  let token = localStorage.getItem(\"token\");\n\n  const loginCheck = async () => {\n    setIsLoading(true);\n    console.log(\"called\");\n\n    try {\n      const response = await fetch('https://sumon-backend.herokuapp.com/api/userlogincheck', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setLoggedIn(true);\n        setData(responseData.user.user.name);\n      } else {\n        setLoggedIn(false);\n        console.log(\"Token Error\");\n      }\n    } catch {\n      console.log(\"Catch\");\n    }\n\n    setIsLoading(false);\n  };\n\n  function App() {\n    _s();\n\n    useEffect(() => {\n      if (token) {\n        loginCheck();\n      }\n    }, []);\n  }\n\n  _s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  App();\n\n  const signUpHandler = async e => {\n    setIsLoading(true);\n    e.preventDefault();\n\n    try {\n      const response = await fetch('https://sumon-backend.herokuapp.com/api/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first_name: firstName,\n          last_name: lastName,\n          phone: phone,\n          email: email,\n          password: password,\n          district\n        })\n      }); //const resposneData = await response.json();\n\n      console.log(response);\n\n      if (response.ok) {\n        setSignUpMode(false);\n        setMsg(\"Signp Successfull. Please Login\");\n      } else if (response.status === 400) {\n        setMsg(\"Email already exists\");\n      } else if (response.status === 401) {\n        setMsg(\"Phone already exists\");\n      } else {\n        setMsg(\"Something Bad, Contact Developers\");\n      }\n\n      setIsLoading(false);\n    } catch {\n      setIsLoading(false);\n    }\n  };\n\n  const loginHandler = async e => {\n    setIsLoading(true);\n    console.log(e);\n\n    if (e) {\n      e.preventDefault();\n    }\n\n    try {\n      const response = await fetch('https://sumon-backend.herokuapp.com/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n          type: type\n        })\n      });\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setLoggedIn(true);\n        setData(responseData.name);\n      } else {\n        setMsg(\"Wrong Credentials\");\n      }\n\n      setIsLoading(false);\n      localStorage.setItem(\"name\", JSON.stringify(responseData.session));\n      localStorage.setItem(\"token\", JSON.stringify(responseData.jsontoken));\n    } catch {\n      setIsLoading(false);\n    }\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const firstNameChange = e => {\n    setFirstName(e.target.value);\n  };\n\n  const lastNameChange = e => {\n    setLastName(e.target.value);\n  };\n\n  const phoneChange = e => {\n    setPhone(e.target.value);\n  };\n\n  const districtChange = e => {\n    setDistrict(e.target.value);\n  };\n\n  const modeToggle = () => {\n    setSignUpMode(!signUpMode);\n  };\n\n  const handleOnClick = async provider => {\n    const res = await socialMediaAuth(provider);\n\n    if (res.uid) {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('https://sumon-backend.herokuapp.com/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: res.email,\n            password: \"password\",\n            type: \"social\"\n          })\n        });\n        const responseData = await response.json();\n\n        if (response.ok) {\n          setLoggedIn(true);\n          setData(responseData.name);\n        } else {\n          setMsg(\"You are not Registered!!\");\n        }\n\n        setIsLoading(false);\n        localStorage.setItem(\"name\", JSON.stringify(responseData.session));\n        localStorage.setItem(\"token\", JSON.stringify(responseData.jsontoken));\n      } catch {\n        setIsLoading(false);\n      }\n    } else {\n      setMsg(\"User not found\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [!isLoading && loggedIn && /*#__PURE__*/_jsxDEV(Services, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 40\n    }, this), !isLoading && !loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [signUpMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"g-2\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"first_name\",\n              value: firstName,\n              onChange: firstNameChange,\n              type: \"text\",\n              placeholder: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"last_name\",\n              value: lastName,\n              onChange: lastNameChange,\n              type: \"text\",\n              placeholder: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"phone\",\n              value: phone,\n              onChange: phoneChange,\n              type: \"phone\",\n              required: true,\n              placeholder: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"district\",\n              value: district,\n              onChange: districtChange,\n              type: \"text\",\n              required: true,\n              placeholder: \"District\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"g-2\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"email\",\n              onChange: handleEmailChange,\n              type: \"email\",\n              required: true,\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: handlePasswordChange,\n              name: \"password\",\n              type: \"password\",\n              required: true,\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"centerL\",\n        onClick: modeToggle,\n        children: signUpMode ? 'Login' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"centerS\",\n        onClick: signUpMode ? signUpHandler : loginHandler,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"red center\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 27\n      }, this), !isLoading && !loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"socialF\",\n          onClick: () => handleOnClick(facebookProvider),\n          children: \"Facebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"socialG\",\n          onClick: () => handleOnClick(googleProvider),\n          children: \"Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this), !isLoading && loggedIn && /*#__PURE__*/_jsxDEV(Services, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(DemoLogin, \"Ysyq8Yu1Q+RXzgKO3slCQZGvE5I=\");\n\n_c = DemoLogin;\nexport default DemoLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoLogin\");","map":{"version":3,"sources":["E:/emergency-handling-react-node/front-end/src/pages/DemoLogin.js"],"names":["React","useState","useEffect","Services","Loading","facebookProvider","googleProvider","socialMediaAuth","Form","Row","Col","FloatingLabel","DemoLogin","email","setEmail","password","setPassword","district","setDistrict","loggedIn","setLoggedIn","signUpMode","setSignUpMode","firstName","setFirstName","lastName","setLastName","msg","setMsg","isLoading","setIsLoading","phone","setPhone","data","setData","img","setImg","type","setType","token","localStorage","getItem","loginCheck","console","log","response","fetch","method","headers","responseData","json","ok","user","name","App","signUpHandler","e","preventDefault","body","JSON","stringify","first_name","last_name","status","loginHandler","setItem","session","jsontoken","handleEmailChange","target","value","handlePasswordChange","firstNameChange","lastNameChange","phoneChange","districtChange","modeToggle","handleOnClick","provider","res","uid"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './DemoLogin.css'\r\nimport Services from './services'\r\nimport Loading from '../Component/Loading'\r\n//import Login from '../Component/Sdata/Login'\r\nimport {facebookProvider, googleProvider} from '../config/authMethods'\r\nimport socialMediaAuth from '../config/auth'\r\nimport { Form, Row, Col, FloatingLabel } from 'react-bootstrap';\r\n\r\n\r\nconst DemoLogin = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [district, setDistrict] = useState();\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [signUpMode, setSignUpMode] = useState(false);\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLastName] = useState();\r\n    const [msg, setMsg] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [phone, setPhone] = useState();\r\n    const [data, setData] = useState();\r\n    const [img, setImg] = useState();\r\n    const[type, setType] = useState();\r\n    let token = localStorage.getItem(\"token\")\r\n    const loginCheck = async () => {\r\n        setIsLoading(true);\r\n        console.log(\"called\");\r\n        try{\r\n        const response = await fetch('https://sumon-backend.herokuapp.com/api/userlogincheck' , {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        });\r\n        const responseData = await response.json();\r\n        if(response.ok) {\r\n            setLoggedIn(true)\r\n            setData(responseData.user.user.name)\r\n        }\r\n        else {\r\n            setLoggedIn(false)\r\n            console.log(\"Token Error\")\r\n        }\r\n        }\r\n        catch {\r\n            console.log(\"Catch\")\r\n        }\r\n        setIsLoading(false)\r\n    };\r\n    function App() {\r\n        useEffect(() => {\r\n            if(token){\r\n                loginCheck()\r\n            }\r\n            \r\n        }, []);\r\n    } \r\n    App();\r\n    const signUpHandler = async e => {\r\n        setIsLoading(true)\r\n        e.preventDefault();\r\n\r\n        try{\r\n        const response = await fetch('https://sumon-backend.herokuapp.com/api/' , {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                first_name: firstName,\r\n                last_name: lastName,\r\n                phone: phone,\r\n                email: email,\r\n                password: password,\r\n                district\r\n            })\r\n            \r\n        });\r\n        //const resposneData = await response.json();\r\n        console.log(response)\r\n        if(response.ok) {setSignUpMode(false); setMsg(\"Signp Successfull. Please Login\")}\r\n        else if (response.status===400) {setMsg(\"Email already exists\")}\r\n        else if (response.status===401) {setMsg(\"Phone already exists\")}\r\n        else {setMsg(\"Something Bad, Contact Developers\");}\r\n        setIsLoading(false)\r\n        \r\n    }\r\n    catch {\r\n        setIsLoading(false)\r\n    }\r\n    }\r\n\r\n    const loginHandler = async e => {\r\n        setIsLoading(true)\r\n        console.log(e)\r\n        if(e) {e.preventDefault()}\r\n\r\n        try{\r\n\r\n        const response = await fetch('https://sumon-backend.herokuapp.com/api/login' , {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n                type: type\r\n            })\r\n            \r\n        });\r\n        const responseData = await response.json();\r\n        if(response.ok) {\r\n            setLoggedIn(true)\r\n            setData(responseData.name)\r\n        }\r\n        else {setMsg(\"Wrong Credentials\")}\r\n        setIsLoading(false)\r\n        localStorage.setItem(\"name\", JSON.stringify(responseData.session))\r\n        localStorage.setItem(\"token\", JSON.stringify(responseData.jsontoken))\r\n        \r\n    }\r\n    catch {\r\n        setIsLoading(false)\r\n    }\r\n    \r\n    \r\n    };\r\n    const handleEmailChange = e => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const handlePasswordChange = e => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const firstNameChange = e =>{\r\n        setFirstName(e.target.value);\r\n    }\r\n    const lastNameChange = e =>{\r\n        setLastName(e.target.value);\r\n    }\r\n    const phoneChange =  e =>{\r\n        setPhone(e.target.value);\r\n    }\r\n    const districtChange =  e =>{\r\n        setDistrict(e.target.value);\r\n    }\r\n    const modeToggle = () => {\r\n        setSignUpMode(!signUpMode)\r\n    }\r\n\r\n    const handleOnClick = async (provider)=>{\r\n        const res = await socialMediaAuth(provider)\r\n        if(res.uid){\r\n        setIsLoading(true)\r\n\r\n        try{\r\n\r\n        const response = await fetch('https://sumon-backend.herokuapp.com/api/login' , {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: res.email,\r\n                password: \"password\",\r\n                type: \"social\"\r\n            })\r\n            \r\n        });\r\n        const responseData = await response.json();\r\n        if(response.ok) {\r\n            setLoggedIn(true)\r\n            setData(responseData.name)\r\n        }\r\n        else {setMsg(\"You are not Registered!!\")}\r\n        setIsLoading(false)\r\n        localStorage.setItem(\"name\", JSON.stringify(responseData.session))\r\n        localStorage.setItem(\"token\", JSON.stringify(responseData.jsontoken))\r\n        \r\n    }\r\n    catch {\r\n        setIsLoading(false)\r\n    }\r\n\r\n        }\r\n        else{setMsg(\"User not found\")}\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            {!isLoading && loggedIn && <Services data={data}/>}\r\n            {!isLoading && !loggedIn && \r\n            \r\n        <div className=\"App\">   \r\n        {signUpMode && \r\n        <div>\r\n            <Row className=\"g-2\">\r\n               <Col md>\r\n                    <Form.Control name=\"first_name\" value={firstName} onChange={firstNameChange} type=\"text\" placeholder=\"First name\"></Form.Control>\r\n                    <Form.Control name=\"last_name\" value={lastName} onChange={lastNameChange} type=\"text\" placeholder=\"Last Name\"></Form.Control>\r\n\r\n                    <Form.Control name=\"phone\" value={phone} onChange={phoneChange} type=\"phone\" required placeholder=\"Phone\"></Form.Control>\r\n                    \r\n                    <Form.Control name=\"district\" value={district} onChange={districtChange} type=\"text\" required placeholder=\"District\"></Form.Control>\r\n               </Col>\r\n            </Row>\r\n        </div>}\r\n\r\n        <div>\r\n        <Row className=\"g-2\">\r\n               <Col md>\r\n            <Form.Control name=\"email\" onChange={handleEmailChange} type=\"email\" required placeholder=\"Email\"></Form.Control>\r\n\r\n            <Form.Control onChange={handlePasswordChange} name=\"password\" type=\"password\" required placeholder=\"Password\"></Form.Control>\r\n        \r\n            </Col>\r\n            </Row>\r\n            \r\n            </div>\r\n            <button className=\"centerL\" onClick={modeToggle}>{signUpMode? 'Login' : 'Sign Up'}</button>\r\n             <button className=\"centerS\"onClick={signUpMode? signUpHandler : loginHandler } type=\"submit\">Submit</button>\r\n            <p className=\"red center\">{msg}</p>\r\n\r\n            {isLoading && <Loading/>}\r\n            {!isLoading && !loggedIn && \r\n            <div>\r\n                <p>Or</p>\r\n                <button className=\"socialF\"onClick={()=>handleOnClick(facebookProvider)}>Facebook</button>\r\n                <button className=\"socialG\"onClick={()=>handleOnClick(googleProvider)}>Google</button>\r\n        \r\n            </div>}\r\n            {!isLoading && loggedIn && <Services data={data}/>}\r\n            \r\n            \r\n    </div>\r\n            }\r\n\r\n\r\n    \r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DemoLogin;"]},"metadata":{},"sourceType":"module"}